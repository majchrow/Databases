-- Trigery

-- NOWA REZERWACJA
CREATE OR REPLACE TRIGGER NOWA_REZERWACJA_TRIGGER
  AFTER INSERT
  ON REZERWACJE
  FOR EACH ROW
  BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);
END NOWA_REZERWACJA_TRIGGER;

-- ZMIANA STATUSU
CREATE OR REPLACE TRIGGER ZMIANA_STATUSU_TRIGGER
  AFTER UPDATE
  ON REZERWACJE
  FOR EACH ROW
  BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);
  END ZMIANA_STATUSU_TRIGGER;

-- ZABRONIENIE USUNIĘCIA REZERWACJI

CREATE OR REPLACE TRIGGER ZABRONIENIE_USUNIECIA_REZERWACJI_TRIGGER
  BEFORE DELETE
  ON REZERWACJE
  FOR EACH ROW
  DECLARE
      not_allowed EXCEPTION;
  BEGIN
    RAISE not_allowed;
  END ZABRONIENIE_USUNIECIA_REZERWACJI_TRIGGER;

-- NOWA REZERWACJA Z LICZBĄ WOLNYCH MIEJSC
CREATE OR REPLACE TRIGGER NOWA_REZERWACJA_TRIGGER
  AFTER INSERT
  ON REZERWACJE
  FOR EACH ROW
  BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);

    UPDATE WYCIECZKI w
    SET LICZBA_WOLNYCH_MIEJSC = LICZBA_WOLNYCH_MIEJSC - 1
    WHERE w.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
END NOWA_REZERWACJA_TRIGGER;

-- ZMIANA STATUSU
CREATE OR REPLACE TRIGGER ZMIANA_STATUSU_TRIGGER
  AFTER UPDATE
  ON REZERWACJE
  FOR EACH ROW
  DECLARE
    to_add INT;
  BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);

    CASE
      WHEN :OLD.STATUS <> 'A' AND :NEW.STATUS = 'A'
      THEN
        to_add := 1;
      WHEN :OLD.STATUS = 'A' AND :NEW.STATUS <> 'A'
      THEN
        to_add := -1;
    ELSE
      to_add := 0;
    END CASE;

    UPDATE WYCIECZKI w
    SET LICZBA_WOLNYCH_MIEJSC = LICZBA_WOLNYCH_MIEJSC + to_add
    WHERE w.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
  END ZMIANA_STATUSU_TRIGGER;


-- ZMIANA MEIJSC NA POZIOMIE WYCIECZKI
CREATE OR REPLACE TRIGGER ZMIANA_MIEJSC_TRIGGER
  BEFORE UPDATE OF LICZBA_MIEJSC
  ON WYCIECZKI
  FOR EACH ROW
  BEGIN
    SELECT :OLD.LICZBA_WOLNYCH_MIEJSC +
           (:NEW.LICZBA_MIEJSC - :OLD.LICZBA_MIEJSC) INTO :NEW.LICZBA_WOLNYCH_MIEJSC
    FROM DUAL;
  END ZMIANA_MIEJSC_TRIGGER;